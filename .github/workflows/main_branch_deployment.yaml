name: Deploy to digital ocean
run-name: ${{ github.actor }}'s merge - Deployment to Digital Ocean

# env:
#   SERVER: production

on:
  push:
    branches:
      - main

jobs:
  main_branch_deployment:
    runs-on: ubuntu-latest
    steps:

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256) kubectl" | sha256sum --check

          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \
          sudo install skaffold /usr/local/bin/
          skaffold version

      - name: Cache skaffold image builds & config
        uses: actions/cache@v3
        with:
          path: ~/.skaffold/
          key: fixed-${{ github.sha }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout (pull) main branch onto Do K8s Cluster
        uses: actions/checkout@v3

      - name: Pull previously built images from DockerHub
        run: |   
          docker image pull fcabrera01/ccg-server:prod-latest
          docker image pull fcabrera01/ccg-client:prod-latest
          docker image pull fcabrera01/ccg-migration-job:prod-latest

      #! Noting this here for later, we can handle errors during GA execution with the following 3 lines!
      # - name: My backup step
      #   if: ${{ failure() }}
      #   uses: actions/heroku@1.0.0


      - name: Build and Push to DockerHub
        run: |
          skaffold build -p prod-do --file-output='production-tags.json'

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-ccg-ims

      - name: Deploy to DigitalOcean Kubernetes
        run: skaffold deploy -p prod-do --build-artifacts='production-tags.json'

      #? We should look into verifying the deployments after, this way we can also roll-back on deployments perhaps...
      # - name: Verify deployment
      #   run: kubectl rollout status deployment/appname -n appname
      # Need to install doctl 


    # skaffold build -p prod --file-output='production-tags.json'
    # skaffold deploy -p prod --build-artifacts='production-tags.json' --tail
# skaffold verify -p staging
# skaffold delete -p staging 
