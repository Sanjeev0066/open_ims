apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-stateful-set
spec:
  serviceName: postgres-headless-port-service
  replicas: 1
  template:
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-persistent-volume-claim
      containers:
      - name: postgres
        image: postgres:latest
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: postgres-storage
          subPath: postgres
        ports:
          - containerPort: 5432
        envFrom:
          - configMapRef:
              name: postgres-config
        # readinessProbe:
        #   exec:
        #     command:
        #       - /bin/sh
        #       - "-c"
        #       - "exec pg_isready -U postgres -h postgres-stateful-set-01"
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
        # livenessProbe:
        #   exec:
        #     command:
        #       - bash
        #       - "-c"
        #       - "psql -U postgres -d$POSTGRES_DB -c 'SELECT 1'"
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
      # We may not need this intermediate container in dev.... confirm this after staging prod env
      # initContainers:
      # - name: pgsql-data-permission-fix
      #   image: busybox
      #   command: ["/bin/chmod","-R","777", "/var/lib/postgresql/data"]
      #   volumeMounts:
      #   - name: postgres-storage
      #     mountPath: /var/lib/postgresql/data
      #     subPath: postgres