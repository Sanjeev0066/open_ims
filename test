WITH DaySeriesData AS (
        SELECT generate_series(
            date_trunc('day', '2023-12-09'::date),
            date_trunc('day', '2024-01-09'::date),
            interval '1 day'
        )::date AS date
    ), 
    WeekSeriesData AS (
        SELECT generate_series(
            date_trunc('week', '2023-12-09'::date),
            date_trunc('week', '2024-01-09'::date),
            interval '1 week'
        )::date AS date
    ), 
    MonthSeriesData AS (
        SELECT generate_series(
            date_trunc('month', '2023-12-09'::date),
            date_trunc('month', '2024-01-09'::date),
            interval '1 month'
        )::date AS date
    ), 
    YearSeriesData AS (
        SELECT generate_series(
            date_trunc('year', '2023-12-09'::date),
            date_trunc('year', '2024-01-09'::date),
            interval '1 year'
        )::date AS date
    ), 
        
    PurchaseOrderSummary AS (
        SELECT
            ds.date,
            'day' AS granularity,
            COALESCE(SUM(po.amount_due), 0) AS total_amount_due
        FROM
            DaySeriesData ds
        LEFT JOIN purchase_orders po ON ds.date = DATE_TRUNC('day', po.purchase_date)
        AND
            po.purchase_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
            ds.date, granularity

        UNION
        SELECT
            ds.date,
            'week' AS granularity,
            COALESCE(SUM(po.amount_due), 0) AS total_amount_due
        FROM
            WeekSeriesData ds
        LEFT JOIN purchase_orders po ON ds.date = DATE_TRUNC('week', po.purchase_date)
        AND
            po.purchase_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
            ds.date, granularity

        UNION
        SELECT
            ds.date,
            'month' AS granularity,
            COALESCE(SUM(po.amount_due), 0) AS total_amount_due
        FROM
            MonthSeriesData ds
        LEFT JOIN purchase_orders po ON ds.date = DATE_TRUNC('month', po.purchase_date)
        AND
            po.purchase_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
            ds.date, granularity

        UNION

        SELECT
            ds.date,
            'year' AS granularity,
            COALESCE(SUM(po.amount_due), 0) AS total_amount_due
        FROM
            YearSeriesData ds
        LEFT JOIN purchase_orders po ON ds.date = DATE_TRUNC('year', po.purchase_date)
        AND
            po.purchase_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
            ds.date, granularity


    ),

    InvoiceOrderSummary AS (
        SELECT
            ds.date,
            'day' AS granularity,
            COALESCE(SUM(io.amount_due), 0) AS total_amount_due
        FROM
            DaySeriesData ds
        LEFT JOIN invoice_orders io ON ds.date = DATE_TRUNC('day', io.invoice_date)
        AND
            io.invoice_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
        ds.date, granularity

        UNION

        SELECT
            ds.date,
            'week' AS granularity,
            COALESCE(SUM(io.amount_due), 0) AS total_amount_due
        FROM
            WeekSeriesData ds
        LEFT JOIN invoice_orders io ON ds.date = DATE_TRUNC('week', io.invoice_date)
        AND
            io.invoice_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
        ds.date, granularity

        UNION

        SELECT
            ds.date,
            'month' AS granularity,
            COALESCE(SUM(io.amount_due), 0) AS total_amount_due
        FROM
            MonthSeriesData ds
        LEFT JOIN invoice_orders io ON ds.date = DATE_TRUNC('month', io.invoice_date)
        AND
            io.invoice_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
        ds.date, granularity

        UNION

        SELECT
            ds.date,
            'year' AS granularity,
            COALESCE(SUM(io.amount_due), 0) AS total_amount_due
        FROM
            YearSeriesData ds
        LEFT JOIN invoice_orders io ON ds.date = DATE_TRUNC('year', io.invoice_date)
        AND
            io.invoice_date BETWEEN '2023-12-09'::date AND '2024-01-09'::date
        GROUP BY
        ds.date, granularity

    )

    SELECT
        COALESCE(p.date, i.date) AS date,
        COALESCE(p.granularity, i.granularity) AS granularity,
        COALESCE(p.total_amount_due, 0) AS expenses,
        COALESCE(i.total_amount_due, 0) AS income,
        COALESCE(i.total_amount_due, 0) - COALESCE(p.total_amount_due, 0) AS profit
    FROM (
        SELECT
            date,
            granularity,
            COALESCE(SUM(total_amount_due), 0) AS total_amount_due
        FROM
            PurchaseOrderSummary
        GROUP BY
            date, granularity
    ) p
    FULL JOIN (
        SELECT
            date,
            granularity,
            COALESCE(SUM(total_amount_due), 0) AS total_amount_due
        FROM
            InvoiceOrderSummary
        GROUP BY
            date, granularity
    ) i
    ON
        p.date = i.date AND p.granularity = i.granularity
    ORDER BY
        date, granularity; 